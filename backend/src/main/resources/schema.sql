--
-- Table structure for table 'users'
-- Corresponds to the User.java entity
--

CREATE TABLE IF NOT EXISTS users (
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS posts (
    post_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    body TEXT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    user_id BIGINT NOT NULL,
    CONSTRAINT fk_posts_user FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS post_tags (
    post_id BIGINT NOT NULL,
    tag VARCHAR(255) NOT NULL,
    CONSTRAINT fk_post_tags_post FOREIGN KEY (post_id) REFERENCES posts(post_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS comments (
    comment_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    body TEXT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    post_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    CONSTRAINT fk_comments_post FOREIGN KEY (post_id) REFERENCES posts(post_id) ON DELETE CASCADE,
    CONSTRAINT fk_comments_user FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
);

-- Insert sample data only if tables are empty
INSERT INTO users (user_id, name, email, password)
SELECT 1, 'Alice Johnson', 'alice.j@example.com', 'securepass123'
WHERE NOT EXISTS (SELECT 1 FROM users WHERE user_id = 1);

INSERT INTO users (user_id, name, email, password)
SELECT 2, 'Bob Williams', 'bob.w@example.com', 'mypassword456'
WHERE NOT EXISTS (SELECT 1 FROM users WHERE user_id = 2);

INSERT INTO users (user_id, name, email, password)
SELECT 3, 'Charlie Brown', 'charlie.b@example.com', 'testpassword789'
WHERE NOT EXISTS (SELECT 1 FROM users WHERE user_id = 3);

INSERT INTO posts (post_id, title, body, created_at, user_id)
SELECT 101, 'Spring Boot Tips', 'Here are some quick tips for optimizing your Spring Boot application startup time.', CURRENT_TIMESTAMP, 1
WHERE NOT EXISTS (SELECT 1 FROM posts WHERE post_id = 101);

INSERT INTO posts (post_id, title, body, created_at, user_id)
SELECT 102, 'The Future of Java', 'Discussing Project Loom and other exciting features coming to the Java ecosystem.', CURRENT_TIMESTAMP, 2
WHERE NOT EXISTS (SELECT 1 FROM posts WHERE post_id = 102);

INSERT INTO posts (post_id, title, body, created_at, user_id)
SELECT 103, 'JPA Entity Mapping Basics', 'A guide to mapping basic fields, relationships, and auditing listeners.', CURRENT_TIMESTAMP, 1
WHERE NOT EXISTS (SELECT 1 FROM posts WHERE post_id = 103);

INSERT INTO post_tags (post_id, tag)
SELECT 101, 'SpringBoot'
WHERE NOT EXISTS (SELECT 1 FROM post_tags WHERE post_id = 101 AND tag = 'SpringBoot');

INSERT INTO post_tags (post_id, tag)
SELECT 101, 'Optimization'
WHERE NOT EXISTS (SELECT 1 FROM post_tags WHERE post_id = 101 AND tag = 'Optimization');

INSERT INTO post_tags (post_id, tag)
SELECT 102, 'Java'
WHERE NOT EXISTS (SELECT 1 FROM post_tags WHERE post_id = 102 AND tag = 'Java');

INSERT INTO post_tags (post_id, tag)
SELECT 102, 'Loom'
WHERE NOT EXISTS (SELECT 1 FROM post_tags WHERE post_id = 102 AND tag = 'Loom');

INSERT INTO post_tags (post_id, tag)
SELECT 102, 'Concurrency'
WHERE NOT EXISTS (SELECT 1 FROM post_tags WHERE post_id = 102 AND tag = 'Concurrency');

INSERT INTO post_tags (post_id, tag)
SELECT 103, 'JPA'
WHERE NOT EXISTS (SELECT 1 FROM post_tags WHERE post_id = 103 AND tag = 'JPA');

INSERT INTO post_tags (post_id, tag)
SELECT 103, 'Hibernate'
WHERE NOT EXISTS (SELECT 1 FROM post_tags WHERE post_id = 103 AND tag = 'Hibernate');

INSERT INTO post_tags (post_id, tag)
SELECT 103, 'Database'
WHERE NOT EXISTS (SELECT 1 FROM post_tags WHERE post_id = 103 AND tag = 'Database');

INSERT INTO comments (comment_id, body, created_at, post_id, user_id)
SELECT 501, 'Great tips, especially the lazy loading one!', CURRENT_TIMESTAMP, 101, 2
WHERE NOT EXISTS (SELECT 1 FROM comments WHERE comment_id = 501);

INSERT INTO comments (comment_id, body, created_at, post_id, user_id)
SELECT 502, 'I agree, Spring Boot is fantastic for quick setup.', CURRENT_TIMESTAMP, 101, 3
WHERE NOT EXISTS (SELECT 1 FROM comments WHERE comment_id = 502);

INSERT INTO comments (comment_id, body, created_at, post_id, user_id)
SELECT 503, 'Loom looks incredibly promising. Cannot wait for it to be mainstream.', CURRENT_TIMESTAMP, 102, 1
WHERE NOT EXISTS (SELECT 1 FROM comments WHERE comment_id = 503);

INSERT INTO comments (comment_id, body, created_at, post_id, user_id)
SELECT 504, 'Very clear explanation of the @JoinColumn annotation.', CURRENT_TIMESTAMP, 103, 2
WHERE NOT EXISTS (SELECT 1 FROM comments WHERE comment_id = 504);
